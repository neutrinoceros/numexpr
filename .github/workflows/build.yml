name: Build

on: [push, pull_request]

permissions:
  contents: read

env:
  CIBW_BEFORE_BUILD: pip install setuptools oldest-supported-numpy pytest
  CIBW_BEFORE_TEST: pip install pytest
  CIBW_BUILD_VERBOSITY: 1
  CIBW_TEST_COMMAND: pytest --pyargs numexpr
  CIBW_TEST_SKIP: "*macosx*arm64*"
  # Building for musllinux and aarch64 takes way too much time.
  # Moreover, NumPy is not providing musllinux for x86_64 either, so it's not worth it.
  CIBW_SKIP: "*musllinux*aarch64* *musllinux*x86_64*"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.arch }} - ${{ matrix.cibw_build }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    env:
      CIBW_BUILD: ${{ matrix.cibw_build }}
      CIBW_ARCHS_LINUX: ${{ matrix.arch }}
      CIBW_ARCHS_MACOS: "x86_64 arm64"
      CIBW_ENABLE: cpython-freethreading
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x86_64, aarch64]
        include:
          - cibw_build: "cp310-*"
            cibw_id: "cp310"
          - cibw_build: "cp311-*"
            cibw_id: "cp311"
          - cibw_build: "cp312-*"
            cibw_id: "cp312"
          - cibw_build: "cp313-*"
            cibw_id: "cp313"
          - cibw_build: "cp313t-*"
            cibw_id: "cp313t"
        exclude:
          - os: windows-latest
            arch: aarch64
          # cibuild is already in charge to build aarch64 (see CIBW_ARCHS_MACOS)
          - os: macos-latest
            arch: aarch64

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        name: Install Python
        with:
          python-version: '3.x'

#      - uses: docker/setup-qemu-action@v2
#        if: ${{ matrix.arch == 'aarch64' }}
#        name: Set up QEMU

      - name: Setup free-threading variables
        if: ${{ endsWith(matrix.cibw_build, 't-*') }}
        shell: bash -l {0}
        run: |
          echo "CIBW_BEFORE_BUILD=pip install setuptools numpy" >> "$GITHUB_ENV"
          echo "CIBW_BEFORE_TEST=pip install pytest pytest-run-parallel" >> "$GITHUB_ENV"
          echo "CIBW_TEST_COMMAND=pytest --parallel-threads=4 --pyargs numexpr" >> "$GITHUB_ENV"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23

      - name: Make sdist
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          python -m pip install build
          python -m build --sdist --outdir wheelhouse .

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.cibw_id }}
          path: ./wheelhouse/*

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: wheelhouse/*
